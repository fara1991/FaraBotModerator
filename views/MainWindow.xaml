<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:wpf="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf"
    x:Class="FaraBotModerator.views.MainWindow"
    mc:Ignorable="d"
    Title="FaraBotModerator"
    Height="550"
    Width="1100"
    HorizontalAlignment="Center"
    VerticalAlignment="Center"
    Left="0"
    Top="0"
    Closed="MainWindow_Closed"
    Icon="/resources/App.ico"
    ResizeMode="CanMinimize">
    <TabControl x:Name="MenuTabControl">
        <TabItem x:Name="MainSettingsTabItem" Header="Main Settings">
            <Canvas x:Name="MainSettingsCanvas" Background="#FFE5E5E5">
                <GroupBox x:Name="TwitchGroupBox" Header="Twitch" HorizontalAlignment="Center" Height="443"
                          Canvas.Left="10" Canvas.Top="10" VerticalAlignment="Center" Width="463">
                    <Canvas x:Name="TwitchCanvas">
                        <CheckBox x:Name="BouyomiChanConnectCheckBox" Content="BouyomiChanConnect" IsChecked="True"
                                  HorizontalAlignment="Center" Canvas.Top="341" VerticalAlignment="Top" />
                        <Label x:Name="TwitchConnectionStateLabel" Content="State: Disconnect"
                               HorizontalAlignment="Center" Canvas.Top="364" VerticalAlignment="Top" />
                        <Button x:Name="TwitchPageButton" Content="TwitchPage" Height="30" Width="105"
                                HorizontalAlignment="Left" Canvas.Left="115" Canvas.Top="361"
                                VerticalAlignment="Center" Click="TwitchPageButton_Click" />
                        <Button x:Name="TwitchConnectionButton" Content="Connect" Height="30" Width="105"
                                HorizontalAlignment="Left" Canvas.Left="224" Canvas.Top="361"
                                VerticalAlignment="Center" Click="TwitchConnectionButton_Click" />
                        <Button x:Name="TwitchDisconnectButton" Content="Disconnect" Height="30" Width="105"
                                HorizontalAlignment="Left" Canvas.Left="333" Canvas.Top="361"
                                VerticalAlignment="Center" Click="TwitchDisconnectButton_Click" />
                        <GroupBox x:Name="TwitchClientGroupBox" Header="Client" HorizontalAlignment="Center"
                                  Height="144" VerticalAlignment="Top" Width="446">
                            <Canvas x:Name="TwitchClientCanvas">
                                <Label x:Name="TwitchClientUserNameLabel" Content="UserName" Height="25"
                                       Background="{x:Null}" Width="83" HorizontalAlignment="Center"
                                       VerticalAlignment="Top" Canvas.Top="-4" />
                                <TextBox x:Name="TwitchClientUserNameTextBox" TextWrapping="Wrap" Width="345"
                                         Height="25" HorizontalAlignment="Left" Canvas.Left="83"
                                         VerticalAlignment="Top" />
                                <Label x:Name="TwitchClientAccessTokenLabel" Content="AccessToken" Height="24"
                                       Width="83" HorizontalAlignment="Center" Canvas.Top="34" VerticalAlignment="Top" />
                                <PasswordBox x:Name="TwitchClientAccessTokenPasswordBox" Width="345" Height="25"
                                             HorizontalAlignment="Center" Canvas.Left="83" Canvas.Top="32"
                                             VerticalAlignment="Top" />
                                <Label x:Name="TwitchClientDisplayNameLabel" Content="DisplayName" Height="24"
                                       Background="{x:Null}" Width="83" HorizontalAlignment="Center"
                                       VerticalAlignment="Top" Canvas.Top="72" />
                                <TextBox x:Name="TwitchClientDisplayNameTextBox" TextWrapping="Wrap" Width="230"
                                         Height="25" HorizontalAlignment="Left" Canvas.Left="83" Canvas.Top="70"
                                         VerticalAlignment="Top" />
                                <Button x:Name="TwitchClientAccessTokenButton" Content="Get Token" Height="30"
                                        Canvas.Left="323" Canvas.Top="62" VerticalAlignment="Center" Width="105"
                                        HorizontalAlignment="Center" Click="TwitchClientAccessTokenButton_Click" />
                            </Canvas>
                        </GroupBox>
                        <GroupBox x:Name="TwitchApiGroupBox" Header="API" HorizontalAlignment="Center" Height="187"
                                  Canvas.Top="149" VerticalAlignment="Top" Width="446">
                            <Canvas x:Name="TwitchApiCanvas">
                                <Label x:Name="TwitchApiClientIdLabel" Content="ClientId" HorizontalAlignment="Center"
                                       VerticalAlignment="Center" Height="25" Background="{x:Null}" Width="83" />
                                <PasswordBox x:Name="TwitchApiClientIdPasswordBox" HorizontalAlignment="Left"
                                             VerticalAlignment="Center" Width="340" Height="25" Canvas.Left="88" />
                                <Label x:Name="TwitchApiClientSecretLabel" Content="ClientSecret"
                                       HorizontalAlignment="Center" VerticalAlignment="Top" Height="25" Width="83"
                                       Canvas.Top="30" />
                                <PasswordBox x:Name="TwitchApiClientSecretPasswordBox" HorizontalAlignment="Center"
                                             VerticalAlignment="Top" Width="340" Height="25" Canvas.Left="88"
                                             Canvas.Top="30" />
                                <Canvas x:Name="TwitchApiNotificationCanvas" Height="39" Width="318" Canvas.Top="96"
                                        HorizontalAlignment="Center" VerticalAlignment="Top">
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Top" Width="318"
                                               Height="15" Text="※Your API AccessToken has expired." Foreground="Red"
                                               Canvas.Top="1" />
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Top" Width="318"
                                               Canvas.Top="19" Height="15"
                                               Text="　Please press the Authorize button to get the Token again."
                                               Foreground="Red" />
                                </Canvas>
                                <TextBlock x:Name="TwitchApiExpireDateTimeTextBlock" Canvas.Left="223"
                                           TextWrapping="Wrap" Text="Token expiration: 2023/01/01 12:00:00"
                                           Canvas.Top="75" HorizontalAlignment="Left" VerticalAlignment="Top"
                                           Height="20" Width="205" />
                                <Button x:Name="TwitchApiAuthorizeButton" Content="Authorize"
                                        HorizontalAlignment="Center" VerticalAlignment="Top" Height="30" Width="105"
                                        Canvas.Left="323" Canvas.Top="100" Click="TwitchApiAuthorizeButton_Click" />
                            </Canvas>
                        </GroupBox>
                    </Canvas>
                </GroupBox>
                <GroupBox x:Name="WebViewGroupBox" Header="WebView" Height="443" Canvas.Left="478" Canvas.Top="10"
                          HorizontalAlignment="Left" VerticalAlignment="Center" Width="597">
                    <Canvas>
                        <wpf:WebView2 x:Name="FaraBotModeratorWebView" Height="391" Width="579"
                                      NavigationCompleted="FaraBotModeratorWebView_NavigationCompleted"
                                      HorizontalAlignment="Center" VerticalAlignment="Top" />
                    </Canvas>
                </GroupBox>
            </Canvas>
        </TabItem>
        <TabItem x:Name="ReactionEventSettingsTabItem" Header="Reaction Event Settings">
            <Canvas x:Name="ReactionEventSettingsCanvas" Background="#FFE5E5E5">
                <Grid x:Name="FollowGrid" HorizontalAlignment="Left" Height="30" Canvas.Left="10" Canvas.Top="10"
                      VerticalAlignment="Center" Width="1075">
                    <CheckBox x:Name="FollowEventCheckBox" Content="Follow" Height="30" Width="117"
                              RenderTransformOrigin="0.746,0.813" HorizontalAlignment="Left" VerticalAlignment="Center" />
                    <TextBox x:Name="FollowEventTextBox" TextWrapping="Wrap" Width="569" Height="30"
                             HorizontalAlignment="Left" VerticalAlignment="Center"
                             Text="{}{followerName}, thanks follow. Channel URL: {followerChannelUrl}"
                             Margin="122,0,0,0" />
                    <TextBox x:Name="FollowWebSocketTextBox" TextWrapping="Wrap" Width="215" Height="30"
                             HorizontalAlignment="Left" VerticalAlignment="Center" Margin="696,0,0,0" Text="filePath" />
                    <Button x:Name="FollowWebSocketButton" Content="Select" Width="72" Height="30"
                            HorizontalAlignment="Left" VerticalAlignment="Center" Margin="916,0,0,0" />
                    <Button x:Name="FollowEventTestButton" Content="Test" Width="72" Height="30"
                            HorizontalAlignment="Left" VerticalAlignment="Center" Margin="993,0,0,0" />
                </Grid>
                <Grid x:Name="RaidGrid" HorizontalAlignment="Left" Height="30" Canvas.Left="10" Canvas.Top="45"
                      VerticalAlignment="Center" Width="1075">
                    <CheckBox x:Name="RaidEventCheckBox" Content="Raid" Height="30" Width="117"
                              RenderTransformOrigin="0.746,0.813" HorizontalAlignment="Left" VerticalAlignment="Center" />
                    <TextBox x:Name="RaidEventTextBox" TextWrapping="Wrap" Width="833" Height="30"
                             HorizontalAlignment="Center" VerticalAlignment="Center"
                             Text="Welcome raiders, thanks raid {raiderName}. Channel URL: {raiderChannelUrl}" />
                    <Button x:Name="RaidEventTestButton" Content="Test" Width="105" Height="30"
                            HorizontalAlignment="Left" VerticalAlignment="Center" Margin="960,0,0,0" />
                </Grid>
                <Grid x:Name="SubscriptionGrid" HorizontalAlignment="Left" Height="30" Canvas.Left="10" Canvas.Top="80"
                      VerticalAlignment="Center" Width="1075">
                    <CheckBox x:Name="SubscriptionEventCheckBox" Content="Subscription" Height="30" Width="117"
                              RenderTransformOrigin="0.746,0.813" HorizontalAlignment="Left" VerticalAlignment="Center" />
                    <TextBox x:Name="SubscriptionEventTextBox" TextWrapping="Wrap" Width="833" Height="30"
                             HorizontalAlignment="Center" VerticalAlignment="Center"
                             Text="{}{subscriberName}, thanks subscription {totalSubscriptionMonth} time." />
                    <Button x:Name="SubscriptionEventTestButton" Content="Test" Width="105" Height="30"
                            HorizontalAlignment="Left" VerticalAlignment="Center" Margin="960,0,0,0" />
                </Grid>
                <Grid x:Name="BitsGrid" HorizontalAlignment="Left" Height="30" Canvas.Left="10" Canvas.Top="115"
                      VerticalAlignment="Center" Width="1075">
                    <CheckBox x:Name="BitsEventCheckBox" Content="Bits" Height="30" Width="117"
                              RenderTransformOrigin="0.746,0.813" HorizontalAlignment="Left" VerticalAlignment="Center" />
                    <TextBox x:Name="BitsEventTextBox" TextWrapping="Wrap" Width="833" Height="30"
                             HorizontalAlignment="Center" VerticalAlignment="Center"
                             Text="{}{bitsSendUserName}, thanks {bitsAmount} bits (total {totalBitsAmount})." />
                    <Button x:Name="BitsEventTestButton" Content="Test" Width="105" Height="30"
                            HorizontalAlignment="Left" VerticalAlignment="Center" Margin="960,0,0,0" />
                </Grid>
                <Grid x:Name="GiftGrid" HorizontalAlignment="Left" Height="30" Canvas.Left="10" Canvas.Top="150"
                      VerticalAlignment="Center" Width="1075">
                    <CheckBox x:Name="GiftEventCheckBox" Content="Gift" Height="30" Width="117"
                              RenderTransformOrigin="0.746,0.813" HorizontalAlignment="Left" VerticalAlignment="Center" />
                    <TextBox x:Name="GiftEventTextBox" TextWrapping="Wrap" Width="833" Height="30"
                             HorizontalAlignment="Center" VerticalAlignment="Center"
                             Text="{}{giftedUserName}, thanks gift present." />
                    <Button x:Name="GiftEventTestButton" Content="Test" Width="105" Height="30"
                            HorizontalAlignment="Left" VerticalAlignment="Center" Margin="960,0,0,0" />
                </Grid>
                <Grid x:Name="ChannelPointGrid" HorizontalAlignment="Left" Height="30" Canvas.Left="10"
                      Canvas.Top="185" VerticalAlignment="Center" Width="1075">
                    <CheckBox x:Name="ChannelPointEventCheckBox" Content="ChannelPoint" Height="30" Width="117"
                              RenderTransformOrigin="0.746,0.813" HorizontalAlignment="Left" VerticalAlignment="Center" />
                    <TextBox x:Name="ChannelPointEventTextBox" TextWrapping="Wrap" Width="833" Height="30"
                             HorizontalAlignment="Center" VerticalAlignment="Center"
                             Text="{}{channel Point UserName} used the {channel Point Title} with {cost} channel points" />
                    <Button x:Name="ChannelPointEventTestButton" Content="Test" Width="105" Height="30"
                            HorizontalAlignment="Left" VerticalAlignment="Center" Margin="960,0,0,0" />
                </Grid>
                <RichTextBox x:Name="ReplaceNotificationRichTextBox" Height="221" Canvas.Left="10" Canvas.Top="232"
                             Width="1065" HorizontalScrollBarVisibility="Disabled" HorizontalAlignment="Left"
                             VerticalAlignment="Center" Padding="0,0,0,0" VerticalScrollBarVisibility="Visible"
                             OpacityMask="Black" Background="{DynamicResource AttentionToActionBrush}">
                    <FlowDocument>
                        <Paragraph>
                            <Run
                                Text="Replace Words&#xA;&#xA;・Follow&#xA;{followedName} -&gt; When followed by a user, replace the userName.&#xA;{followerChannelUrl} -&gt; When twitch events, replace event userChannel.&#xA;&#xA;----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;・Raid&#xA;{raiderName} -&gt; When raid by a user, replace the userName.&#xA;{raiderChannelUrl} -&gt; When raid by a user, replace the channelUrl.&#xA;&#xA;----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;・Subscription&#xA;{subscriberName} -&gt; When subscription by a user, replace the userName.&#xA;{totalSubscriptionMonth} -&gt; When subscription by a user, replace total subscription count.&#xA;&#xA;----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;・Bits&#xA;{bitsAmount} -&gt; When throw bits by a user, replace the bits amount.&#xA;{totalBitsAmount} -&gt; When throw bits by a user, replace the total bits amount.&#xA;{bitsSendUserName} -&gt; When throw bits by a user, replace the userName.&#xA;&#xA;----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;・Gift&#xA;{giftedUserName} -&gt; When throw gifted by a user, replace the userName.&#xA;&#xA;----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;・ChannelPoint&#xA;{channelPointCost} -&gt; When use channelPoint, replace the number of channelPoints used.&#xA;{channelPointTitle} -&gt; When use channelPoint, replace the channelPoint title.&#xA;{channelPointUserName} -&gt; When use channelPoint, replace userName with channelPoint." />
                        </Paragraph>
                    </FlowDocument>
                </RichTextBox>
            </Canvas>
        </TabItem>
        <TabItem x:Name="AutoBotSettingsTabItem" Header="Auto Bot Settings">
            <Canvas x:Name="AutoBotSettingsCanvas" Background="#FFE5E5E5">
                <TabControl x:Name="AutoBotSettingsTabControl" Height="463" HorizontalAlignment="Left"
                            VerticalAlignment="Center" Width="1100">
                    <TabItem x:Name="AutoBotTranslateTabItem" Header="Translate">
                        <Canvas x:Name="AutoBotTranslateCanvas" Background="#FFE5E5E5">
                            <Label x:Name="DeepLApiKeyLabel" Content="DeepL API Key" HorizontalAlignment="Left"
                                   VerticalAlignment="Center" Height="30" Width="97" Canvas.Left="1" Canvas.Top="10" />
                            <PasswordBox x:Name="DeepLApiKeyPasswordBox" HorizontalAlignment="Left"
                                         VerticalAlignment="Center" Width="835" Height="30" Canvas.Left="103"
                                         Canvas.Top="10" />
                            <Label x:Name="DeepLCautionLabel" Content="※Enter a Key for either DeepL API Free or Pro"
                                   HorizontalAlignment="Left" VerticalAlignment="Top" Width="369" Foreground="Red"
                                   Canvas.Left="10" Canvas.Top="42" />
                            <Button x:Name="DeepLSiteGoButton" Content="DeepL Site" HorizontalAlignment="Left"
                                    VerticalAlignment="Center" Height="30" Width="105" Canvas.Left="960"
                                    Canvas.Top="10" Click="DeepLSiteGoButton_Click" />
                            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Height="50"
                                        VerticalAlignment="Center" />
                            <lvc:CartesianChart
                                x:Name="LiveChartGraph"
                                Series="{Binding seriesCollection}" Height="276" Canvas.Left="6" Canvas.Top="127"
                                Width="1059" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <lvc:CartesianChart.AxisX>
                                    <lvc:Axis Title="Month" Labels="{Binding labels}" MinValue="{Binding MinValue}"
                                              MaxValue="{Binding MaxValue}">
                                        <lvc:Axis.Separator>
                                            <lvc:Separator IsEnabled="False" Step="1" />
                                        </lvc:Axis.Separator>
                                    </lvc:Axis>
                                </lvc:CartesianChart.AxisX>
                                <lvc:CartesianChart.AxisY>
                                    <lvc:Axis MaxValue="10.0" MinValue="0.0" />
                                </lvc:CartesianChart.AxisY>
                            </lvc:CartesianChart>
                            <TextBlock x:Name="LiveChartTextBlock"
                                       HorizontalAlignment="Left"
                                       Style="{StaticResource MaterialDesignHeadline4TextBlock}"
                                       Text="Chart" Height="50" Canvas.Left="63" Canvas.Top="72"
                                       VerticalAlignment="Top" />
                            <materialDesign:PackIcon x:Name="LiveChartPackIcon"
                                                     Width="34"
                                                     Height="35"
                                                     Foreground="{StaticResource PrimaryHueMidBrush}"
                                                     Kind="ChartBar" Canvas.Left="24" Canvas.Top="80" />
                            <Button
                                x:Name="LiveChartUpdateButton"
                                Width="100"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Click="LiveChartUpdateButton_Click"
                                Style="{StaticResource MaterialDesignOutlinedButton}" Canvas.Left="163" Canvas.Top="81">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon VerticalAlignment="Center" Kind="Update" />
                                    <TextBlock Text="Update" />
                                </StackPanel>
                            </Button>
                        </Canvas>
                    </TabItem>
                    <TabItem x:Name="AutoBotTimerTabItem" Header="Timer">
                        <Canvas x:Name="AutoBotTimerCanvas" Background="#FFE5E5E5">
                            <GroupBox x:Name="CycleNotificationGroupBox" Header="Cycle Notifications" Height="194"
                                      Canvas.Left="10" Width="1065" HorizontalAlignment="Center"
                                      VerticalAlignment="Center" Canvas.Top="10">
                                <Canvas x:Name="CycleNotificationCanvas">
                                    <Grid x:Name="CycleTimer1Grid" HorizontalAlignment="Left" Height="30"
                                          Canvas.Left="10" Canvas.Top="0" VerticalAlignment="Center" Width="1027">
                                        <CheckBox x:Name="CycleTimer1CheckBox" Content="CycleTimer1"
                                                  HorizontalAlignment="Left" VerticalAlignment="Center" Height="30"
                                                  Width="90" />
                                        <Slider x:Name="CycleTimer1Slider" Width="120" Maximum="120" Minimum="15"
                                                Value="15" TickPlacement="TopLeft" Ticks="15,30,45,60,90,120"
                                                AutoToolTipPlacement="TopLeft" IsSnapToTickEnabled="True"
                                                HorizontalAlignment="Left" VerticalAlignment="Center" Margin="95,0,0,0"
                                                ManipulationStarted="CycleTimerSlider_ManipulationStarted"
                                                ManipulationDelta="CycleTimerSlider_ManipulationDelta" />
                                        <Label x:Name="CycleTimer1Label" Content="min/time" HorizontalAlignment="Left"
                                               VerticalAlignment="Center" Width="60" Margin="220,0,0,0" Height="30" />
                                        <TextBox x:Name="CycleTimer1TextBox" TextWrapping="Wrap" Width="742"
                                                 HorizontalAlignment="Left" VerticalAlignment="Center"
                                                 Margin="285,0,0,0" Height="30" />
                                    </Grid>
                                    <Grid x:Name="CycleTimer2Grid" HorizontalAlignment="Left" Height="30"
                                          Canvas.Left="10" Canvas.Top="38" VerticalAlignment="Center" Width="1027">
                                        <CheckBox x:Name="CycleTimer2CheckBox" Content="CycleTimer2"
                                                  HorizontalAlignment="Left" VerticalAlignment="Center" Height="30"
                                                  Width="90" />
                                        <Slider x:Name="CycleTimer2Slider" Width="120" Maximum="120" Minimum="15"
                                                Value="15" TickPlacement="TopLeft" Ticks="15,30,45,60,90,120"
                                                AutoToolTipPlacement="TopLeft" IsSnapToTickEnabled="True"
                                                HorizontalAlignment="Left" VerticalAlignment="Center" Margin="95,0,0,0"
                                                Grid.ColumnSpan="2" />
                                        <Label x:Name="CycleTimer2Label" Content="min/time" HorizontalAlignment="Left"
                                               VerticalAlignment="Center" Width="60" Margin="220,0,0,0" Height="30"
                                               Grid.Column="1" />
                                        <TextBox x:Name="CycleTimer2TextBox" TextWrapping="Wrap" Width="742"
                                                 HorizontalAlignment="Left" VerticalAlignment="Center"
                                                 Margin="285,0,0,0" Height="30" Grid.Column="1" />
                                    </Grid>
                                    <Grid x:Name="CycleTimer3Grid" HorizontalAlignment="Left" Height="30"
                                          Canvas.Left="10" Canvas.Top="76" VerticalAlignment="Center" Width="1027">
                                        <CheckBox x:Name="CycleTimer3CheckBox" Content="CycleTimer3"
                                                  HorizontalAlignment="Left" VerticalAlignment="Center" Height="30"
                                                  Width="90" />
                                        <Slider x:Name="CycleTimer3Slider" Width="120" Maximum="120" Minimum="15"
                                                Value="15" TickPlacement="TopLeft" Ticks="15,30,45,60,90,120"
                                                AutoToolTipPlacement="TopLeft" IsSnapToTickEnabled="True"
                                                HorizontalAlignment="Left" VerticalAlignment="Center" Margin="95,0,0,0" />
                                        <Label x:Name="CycleTimer3Label" Content="min/time" HorizontalAlignment="Left"
                                               VerticalAlignment="Center" Width="60" Margin="220,0,0,0" Height="30" />
                                        <TextBox x:Name="CycleTimer3TextBox" TextWrapping="Wrap" Width="742"
                                                 HorizontalAlignment="Left" VerticalAlignment="Center"
                                                 Margin="285,0,0,0" Height="30" />
                                    </Grid>
                                    <Grid x:Name="CycleTimer4Grid" HorizontalAlignment="Left" Height="30"
                                          Canvas.Left="10" Canvas.Top="114" VerticalAlignment="Center" Width="1027">
                                        <CheckBox x:Name="CycleTimer4CheckBox" Content="CycleTimer4"
                                                  HorizontalAlignment="Left" VerticalAlignment="Center" Height="30"
                                                  Width="90" />
                                        <Slider x:Name="CycleTimer4Slider" Width="120" Maximum="120" Minimum="15"
                                                Value="15" TickPlacement="TopLeft" Ticks="15,30,45,60,90,120"
                                                AutoToolTipPlacement="TopLeft" IsSnapToTickEnabled="True"
                                                HorizontalAlignment="Left" VerticalAlignment="Center" Margin="95,0,0,0" />
                                        <Label x:Name="CycleTimer4Label" Content="min/time" HorizontalAlignment="Left"
                                               VerticalAlignment="Center" Width="60" Margin="220,0,0,0" Height="29" />
                                        <TextBox x:Name="CycleTimer4TextBox" TextWrapping="Wrap" Width="742"
                                                 HorizontalAlignment="Left" VerticalAlignment="Center"
                                                 Margin="285,0,0,0" Height="30" />
                                    </Grid>
                                </Canvas>
                            </GroupBox>
                            <GroupBox x:Name="FixedNotificationGroupBox" Header="Fixed Notifications" Height="194"
                                      Canvas.Left="10" Canvas.Top="213" Width="1065" HorizontalAlignment="Center"
                                      VerticalAlignment="Top">
                                <Canvas x:Name="FixedNotificationCanvas">
                                    <Grid x:Name="FixedTimer1Grid" HorizontalAlignment="Left" Height="30"
                                          Canvas.Left="10" Canvas.Top="0" VerticalAlignment="Center" Width="1027">
                                        <CheckBox x:Name="FixedTimer1CheckBox" Content="FixedTimer1"
                                                  HorizontalAlignment="Left" VerticalAlignment="Center" Height="30" />
                                        <DatePicker x:Name="FixedTimer1DatePicker" DisplayDate="2023-04-08"
                                                    Margin="91,0,844,0" Height="30" />
                                        <materialDesign:TimePicker x:Name="FixedTimer1TimePicker"
                                                                   HorizontalAlignment="Left" Margin="188,5,0,0"
                                                                   Width="92" Is24Hours="True"
                                                                   SelectedTimeFormat="Long" VerticalAlignment="Top"
                                                                   WithSeconds="True" />
                                        <TextBox x:Name="FixedTimer1TextBox" TextWrapping="Wrap" Width="742"
                                                 HorizontalAlignment="Left" VerticalAlignment="Center"
                                                 Margin="285,0,0,0" Height="30" />
                                    </Grid>
                                    <Grid x:Name="FixedTimer2Grid" HorizontalAlignment="Left" Height="30"
                                          Canvas.Left="10" Canvas.Top="38" VerticalAlignment="Center" Width="1027">
                                        <CheckBox x:Name="FixedTimer2CheckBox" Content="FixedTimer2"
                                                  HorizontalAlignment="Left" VerticalAlignment="Center" Height="30" />
                                        <DatePicker x:Name="FixedTimer2DatePicker" DisplayDate="2023-04-08"
                                                    Margin="91,0,846,0" Height="30" />
                                        <materialDesign:TimePicker x:Name="FixedTimer2TimePicker"
                                                                   HorizontalAlignment="Left" Margin="188,5,0,0"
                                                                   Width="92" Is24Hours="True"
                                                                   SelectedTimeFormat="Long" VerticalAlignment="Top"
                                                                   WithSeconds="True" />
                                        <TextBox x:Name="FixedTimer2TextBox" TextWrapping="Wrap" Width="742"
                                                 HorizontalAlignment="Left" VerticalAlignment="Center"
                                                 Margin="285,0,0,0" Height="30" />
                                    </Grid>
                                    <Grid x:Name="FixedTimer3Grid" HorizontalAlignment="Left" Height="30"
                                          Canvas.Left="10" Canvas.Top="76" VerticalAlignment="Center" Width="1027">
                                        <CheckBox x:Name="FixedTimer3CheckBox" Content="FixedTimer3"
                                                  HorizontalAlignment="Left" VerticalAlignment="Center" Height="30" />
                                        <DatePicker x:Name="FixedTimer3DatePicker" DisplayDate="2023-04-08"
                                                    Margin="91,0,846,0" Height="30" />
                                        <materialDesign:TimePicker x:Name="FixedTimer3TimePicker"
                                                                   HorizontalAlignment="Left" Margin="188,5,0,0"
                                                                   Width="92" Is24Hours="True"
                                                                   SelectedTimeFormat="Long" VerticalAlignment="Top"
                                                                   WithSeconds="True" />
                                        <TextBox x:Name="FixedTimer3TextBox" TextWrapping="Wrap" Width="742"
                                                 HorizontalAlignment="Left" VerticalAlignment="Center"
                                                 Margin="285,0,0,0" Height="30" />
                                    </Grid>
                                    <Grid x:Name="FixedTimer4Grid" HorizontalAlignment="Left" Height="30"
                                          Canvas.Left="10" Canvas.Top="114" VerticalAlignment="Center" Width="1027">
                                        <CheckBox x:Name="FixedTimer4CheckBox" Content="FixedTimer4"
                                                  HorizontalAlignment="Left" VerticalAlignment="Center" Height="30" />
                                        <DatePicker x:Name="FixedTimer4DatePicker" DisplayDate="2023-04-08"
                                                    Margin="91,0,846,0" Height="30" />
                                        <materialDesign:TimePicker x:Name="FixedTimer4TimePicker"
                                                                   HorizontalAlignment="Left" Margin="188,5,0,0"
                                                                   Width="92" Is24Hours="True"
                                                                   SelectedTimeFormat="Long" VerticalAlignment="Top"
                                                                   WithSeconds="True" />
                                        <TextBox x:Name="FixedTimer4TextBox" TextWrapping="Wrap" Width="742"
                                                 HorizontalAlignment="Left" VerticalAlignment="Center"
                                                 Margin="285,0,0,0" Height="30" />
                                    </Grid>
                                </Canvas>
                            </GroupBox>
                        </Canvas>
                    </TabItem>
                </TabControl>
            </Canvas>
        </TabItem>
    </TabControl>
</Window>